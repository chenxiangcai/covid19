{"version":3,"sources":["componets/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeatMap","state","id","Date","getTime","toString","scene","layer","Scene","this","map","GaodeMap","style","pitch","center","zoom","on","fetch","then","res","json","data","console","log","HeatmapLayer","source","shape","size","intensity","radius","opacity","rampColors","colors","reverse","positions","addLayer","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAmEeA,E,4MA5DXC,MAAQ,CACJC,IAAI,IAAIC,MAAOC,UAAUC,WACzBC,MAAO,KACPC,MAAO,M,kEAGU,IAAD,OACVD,EAAQ,IAAIE,QAAM,CACpBN,GAAIO,KAAKR,MAAMC,GACfQ,IAAK,IAAIC,IAAS,CACdC,MAAO,OACPC,MAAO,EACPC,OAAQ,CAAC,kBAAmB,mBAC5BC,KAAM,sBAGdT,EAAMU,GAAG,UAAU,WAEfC,MACI,oCAECC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFC,QAAQC,IAAIF,GAEZ,EAAKd,MAAQ,IAAIiB,eAAa,IACzBC,OAAOJ,GACPK,MAAM,WACNC,KAAK,WACLf,MAAM,CACHgB,UAAW,EACXC,OAAQ,GACRC,QAAS,EACTC,WAAY,CACRC,OAAQ,CACJ,UACA,UACA,UACA,UACA,UACA,WACFC,UACFC,UAAW,CAAC,EAAG,GAAK,GAAK,GAAK,GAAK,MAM/C5B,EAAM6B,SAAS,EAAK5B,e,+BAMhC,OACI,qBAAKL,GAAIO,KAAKR,MAAMC,S,GAzDVkC,aCQPC,MARf,WACI,OACI,8BACG,cAAC,EAAD,OCIIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9e8b3e58.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {HeatmapLayer, Scene} from '@antv/l7';\r\nimport {GaodeMap} from '@antv/l7-maps';\r\n\r\n\r\nclass HeatMap extends Component {\r\n\r\n    state = {\r\n        id: new Date().getTime().toString(),\r\n        scene: null,\r\n        layer: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const scene = new Scene({\r\n            id: this.state.id,\r\n            map: new GaodeMap({\r\n                style: 'dark',\r\n                pitch: 0,\r\n                center: [127.5671666579043, 7.445038892195569],\r\n                zoom: 2.632456779444394,\r\n            })\r\n        });\r\n        scene.on('loaded', () => {\r\n            // 请求数据\r\n            fetch(\r\n                'http://localhost/world_heart_map'\r\n            )\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    console.log(data)\r\n                    // 创建图层\r\n                    this.layer = new HeatmapLayer({})\r\n                        .source(data)\r\n                        .shape('heatmap')\r\n                        .size('confirm') // weight映射通道\r\n                        .style({\r\n                            intensity: 2,\r\n                            radius: 20,\r\n                            opacity: 1.0,\r\n                            rampColors: {\r\n                                colors: [\r\n                                    '#FF4818',\r\n                                    '#F7B74A',\r\n                                    '#FFF598',\r\n                                    '#91EABC',\r\n                                    '#2EA9A1',\r\n                                    '#206C7C'\r\n                                ].reverse(),\r\n                                positions: [0, 0.2, 0.4, 0.6, 0.8, 1.0]\r\n                            }\r\n                        })\r\n\r\n                    // 添加图层\r\n                    // 调用场景的 addLayer 函数，给底图添加图层\r\n                    scene.addLayer(this.layer)\r\n                })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id={this.state.id}></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeatMap;","import './App.css';\nimport React from \"react\";\nimport HeatMap from \"./componets\";\n\n\nfunction App() {\n    return (\n        <div>\n           <HeatMap/>\n        </div>\n    );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}